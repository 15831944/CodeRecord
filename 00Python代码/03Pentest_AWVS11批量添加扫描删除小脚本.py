#/usr/bin/python
#-*- coding:utf-8 -*-
'''
增加了交互功能
加密算法为sha256
'''
import urllib2
import ssl
import json
import hashlib

print 'The purpose of this program is batch scanning for awvs11'
servers=raw_input('Pleas Input The AWVS Server Address,default is localhost: ')
#servers='localhost'
#servers=服务器
username=raw_input('Please Input The AWVS Username: ')
#username=用户名(gncao123)
pw=raw_input('Please Input The AWVS Password: ')
#pw='P@ssw0rd'
#以上内容请批量替换，然后把要添加的url列表保存成testawvs.txt文件，放在该脚本下运行该脚本。


ssl._create_default_https_context = ssl._create_unverified_context
url_login="https://"+servers+":3443/api/v1/me/login"    #awvs登录页面url地址
send_headers_login={
'Host': servers+':3443',
'Accept': 'application/json, text/plain, */*',
'Accept-Language': 'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',
'Accept-Encoding': 'gzip, deflate, br',
'Content-Type': 'application/json;charset=utf-8'
}


#data_login='{"email":"gncao@163.com","password":"b03ddf3ca2e714a6548e7495e2a03f5e824eaac9837cd7f159c67b90fb4b7342","remember_me":false}'
data_login='{"email":"'+username+'","password":"'+hashlib.sha256(pw).hexdigest()+'","remember_me":false}'
req_login = urllib2.Request(url_login,headers=send_headers_login)
response_login = urllib2.urlopen(req_login,data_login)
xauth = response_login.headers['X-Auth']
COOOOOOOOkie = response_login.headers['Set-Cookie']
print 'COOOOOOOOkie='+COOOOOOOOkie
print '-------'
print 'xauth='+xauth
#以上代码实现登录（获取cookie）和校验值

url="https://"+servers+":3443/api/v1/targets"

urllist=open('target.txt','r')#这是要添加的url列表
formaturl=urllist.readlines()
send_headers2={	
'Host':servers+':3443',
'Accept': 'application/json, text/plain, */*',
'Accept-Language': 'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',
'Content-Type':'application/json;charset=utf-8',
'X-Auth':xauth,
'Cookie':COOOOOOOOkie,
}

try:
	for i in formaturl:
		target_url='http://'+i.strip()
		data='{"address":"'+target_url+'","description":"222","criticality":"10"}'
		# data = urllib.urlencode(data)由于使用json格式所以不用添加
		req = urllib2.Request(url,headers=send_headers2)
		response = urllib2.urlopen(req,data)
		jo=eval(response.read())
		# print jo
		target_id=jo['target_id']#获取添加后的任务ID

        #以上代码实现批量添加

		url_scan="https://"+servers+":3443/api/v1/scans"
		headers_scan={
                    'Host':servers+':3443',
                    'Accept': 'application/json, text/plain, */*',
                    'Accept-Language': 'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',
                    'Accept-Encoding': 'gzip, deflate, br',
                    'Content-Type': 'application/json;charset=utf-8',
                    'X-Auth':xauth,
                    'Cookie':COOOOOOOOkie,
		}
		data_scan='{"target_id":'+'"'+target_id+'"'+',"profile_id":"11111111-1111-1111-1111-111111111111","report_template_id":"11111111-1111-1111-1111-111111111111","schedule":{"disable":false,"start_date":null,"time_sensitive":false},"ui_session_id":"64685290edace0edbf0dc22675a4346f"}'
		#data_scan='{"target_id":'+'"'+target_id+'"'+',"profile_id":"11111111-1111-1111-1111-111111111111","schedule":{"disable":false,"start_date":null,"time_sensitive":false},"ui_session_id":"66666666666666666666666666666666"}'
		#data_scan='{"target_id":'+'\"'+target_id+'\"'+',"profile_id":"11111111-1111-1111-1111-111111111111","schedule":{"disable":false,"start_date":null,"time_sensitive":false},"ui_session_id":"66666666666666666666666666666666"}'
		req_scan=urllib2.Request(url_scan,headers=headers_scan)
		response_scan=urllib2.urlopen(req_scan,data_scan)
		print response_scan.read()
#以上代码实现批量加入扫描

except Exception,e:
	print e

