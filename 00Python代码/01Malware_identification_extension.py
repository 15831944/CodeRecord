#!/usr/bin/python
# -*- coding: UTF-8 -*-

# 第三方库 https://pypi.org/project/python-magic-bin/0.4.14/
import os
import magic



# 后缀增加
def ident_extension(var):
    # 自定义增加后缀方法
    # '文件描述':'.后缀',
    return {
            'ASCII text, with CRLF line terminators':'.txt',
            'ASCII text, with very long lines, with no line terminators':'.txt',
            'PHP script, ASCII text, with very long lines, with CRLF line terminators': '.php',
            'PHP script, ASCII text, with very long lines, with no line terminators':  '.php',
            'PE32 executable (console) Intel 80386, for MS Windows':'.dll',
    }.get(var,False)    #'error'为默认返回值，可自设置

# 增加文件后缀名
def change_filename(filepath,filemime):
    # 如果原来就有后缀，就不修改了
    # portion = os.path.splitext(filepath)
    # if len(portion[1])>0:
    #     return False

    # 如果后缀在数据库中就改名
    if ident_extension(filemime) != False :
        portion = filepath + ident_extension(filemime)
        os.rename(filepath,portion)
        return True

if __name__ == '__main__':
    # 存放的路径
    path = os.getcwd()+'//sample'
    # 判断目录是否存在
    if os.path.exists(path) == False:
          print 'usage:需要把无后缀名的样本放入sample目录内，与脚本放置在一起'
          print 'C:.'
          print '└─identification_extension.py'
          print '│'
          print '└─sample'




    # 遍历目录内文件名
    nCout = 0                                                       # 文件计数
    path_text = open('path.txt', 'w')                               # 将文件名写入文本
    for fpathe, dirs, fs in os.walk(path):                          # 遍历路径
        for f in fs:                                                # 遍历文件名
            nCout = nCout + 1                                       # 计数器增加
            #print os.path.join(fpathe, f)                          # 拼接全路径
            # 识别单个后缀函数
            mimetype = magic.from_file(os.path.join(fpathe, f))
            print f + '==> ' + mimetype  # => "text/plain"
            change_filename(os.path.join(fpathe, f),mimetype)       # 修 改文件后缀
            path_text.write(os.path.join(fpathe, f) + '\n')         # 将路径写入到文本
    print 'file count: {0}'.format(nCout)                          # 打印计数器
    path_text.close()



